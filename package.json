{
  "name": "sly.sh",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "vite --host",
    "build": "vite build",
    "deploy": "gh-pages -d dist",
    "prepare": "cp assets/box.glb dist/assets/box.glb && cp -r pages/* dist/ 2>/dev/null || true && node -e \"const fs=require('fs');const path=require('path');const assetsDir='dist/assets';if(!fs.existsSync(assetsDir))process.exit(0);const files=fs.readdirSync(assetsDir);const assetMap={};files.forEach(f=>{const match=f.match(/^(.+)-[A-Za-z0-9_-]{8}\\.(\\w+)$/);if(match){const[,name,ext]=match;assetMap[name+'.'+ext]=f;}});const glob=require('glob');const htmlFiles=[...glob.sync('dist/status/*.html'),...glob.sync('dist/team/*.html')];htmlFiles.forEach(file=>{let content=fs.readFileSync(file,'utf8');Object.entries(assetMap).forEach(([orig,hashed])=>{const pattern=new RegExp('https://sly\\\\.sh/assets/'+orig.replace(/\\\\./g,'\\\\\\\\.'),'g');content=content.replace(pattern,'https://sly.sh/assets/'+hashed);});fs.writeFileSync(file,content);});\" && npm install glob --no-save 2>/dev/null || true && echo sly.sh > dist/CNAME",
    "ship": "npm run build && npm run prepare && npm run deploy"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "gh-pages": "^6.3.0",
    "three": "^0.172.0"
  },
  "devDependencies": {
    "vite": "^6.0.7"
  }
}
